blueprint:
  name: Heating Control Schedule for BT Thermostats
  description: >
    # Heating Control Schedule for BT Thermostats

    **Version 0.6.5**

    ## How it works

    Heating control blueprint for BT Thermostats if Schedule event is active. Scheduler can be added in the helpers section in your home assistant settings.
    
    ### Basic function

      * current date must be in between *date from* and *date to*. Year is ignored.
      * runs only if someone is at home, uses *Person at home*
      * switch HVAC_Mode to *heat* and Temperature to *Set Temperature value* when schedule begins and reset to *Reset Temperatur value* when schedule ends.

    Required = *

    ## History

    ### Version 0.6.5

    add a delay between reset temperature and hvac mode off

    ### Version 0.6.4

    add more logic to sensor temperature control

    ### Version 0.6.3

    fix trigger

    ### Version 0.6.2

    fix else condition

    ### Version 0.6.1

    fix if condition

    ### Version 0.6.0

    add a control temperature sensor to disable thermostat

    ### Version 0.5.1

    define (set to 10pm) trigger to reset temperature

    ### Version 0.5

    add a time trigger to force reset temperature of thermostat

    ### Version 0.4.2

    add some notes and descriptions, for easy understanding

    ### Version 0.4.1

    ease the notes

    ### Version 0.4

    add date from and date to for heating period

    ### Version 0.3

    add device_tracker, only heat if someone is at home

    ### Version 0.2

    reset temperature after heating

    ### Version 0.1

    initial Version

  domain: automation
  source_url: https://github.com/StormCh/homeassistant/blob/main/blueprints/heating_control_for_btt.yaml
  input:
    date_from:
      name: Date from *
      description: (Required) Select date to start heating period. For example 31. October. 
      selector:
        date:

    date_to:
      name: Date to *
      description: (Required) Select date to end heating period. For example 31. March.
      selector:
        date:

    input_persons:
      name: Person at home *
      description: (Required) Presence, start heating only if someone (one of there persons) is at home.
      default: []
      selector:
        entity:
          filter:
            - domain: person
          multiple: true

    bt_times_schedule:
      name: Scheduler *
      description: (Required) Used Scheduler. Scheduler can be added in the helpers section in your home assistant settings.
      selector:
        entity:
          domain: schedule

    thermostat_target:
      name: Thermostats *
      description: (Required) Choose the thermostats to be used for heating.
      selector:
        target:
          device:
            integration: better_thermostat
          entity:
            integration: better_thermostat
            domain: climate

    set_bt_temp:
      name: Set Target Temperature
      description: Set the heating target temperature.
      default: 20
      selector:
        number:
          min: 5
          max: 30
          step: 0.5
          unit_of_measurement: °C

    sensor_control:
      name: Sensor Control *
      description: If temperature of sensor is higher than target temperatur, then disable thermostat.
      selector:
        entity:
          filter:
            - domain:
                - sensor
              device_class:
                - temperature
          multiple: false

    set_bt_temp_after:
      name: Reset Temperature
      description: Reset the temperature after heating.
      default: 18
      selector:
        number:
          min: 5
          max: 30
          step: 0.5
          unit_of_measurement: °C

mode: queued
max_exceeded: silent

variables:
  date_from: !input date_from
  date_to: !input date_to
  bt_times_schedule: !input bt_times_schedule
  input_persons: !input input_persons
  thermostat_target: !input thermostat_target
  set_bt_temp: !input set_bt_temp
  set_bt_temp_after: !input set_bt_temp_after
  sensor_control: !input sensor_control

trigger:
  - platform: state
    entity_id: !input bt_times_schedule
    from: "on"
    to: "off"
  - platform: state
    entity_id: !input bt_times_schedule
    from: "off"
    to: "on"
  - platform: time
    at: "22:00:00"
  - platform: numeric_state
    entity_id: !input sensor_control
    for:
      hours: 0
      minutes: 1
      seconds: 0
    above: !input set_bt_temp

  #- platform: time_pattern #this will kill timer trigger heating
  #  hours: "/1"
  #  # minutes: "/5" #every X minutes

condition: []

action:
  - variables:
      is_anybody_home: "{{ expand(input_persons) | selectattr('state', 'eq', 'home') | list | count > 0 }}"
      date_from_month: "{{ (date_from | as_datetime).month }}"
      date_from_day: "{{ (date_from | as_datetime).day }}"
      date_to_month: "{{ (date_to | as_datetime).month }}"
      date_to_day: "{{ (date_to | as_datetime).day }}"

  - if:
      - condition: template # is current date between date_from and date_to
        value_template: "{{ (now().year,date_from_month,date_from_day) <= ( now().year, now().month, now().day) <= (now().year+1,date_to_month,date_to_day) }}"
      - condition: state # and selected schedule turns to on
        entity_id: !input bt_times_schedule
        state: "on"
      - condition: template # and is anybody at home
        value_template: "{{ is_anybody_home == true }}"

    then:
      - if: # if temperature of sensor is below target temperature
        - condition: numeric_state
          entity_id: !input sensor_control
          below: !input set_bt_temp

        then: # then set thermostate to heat and set target temperature
          - service: climate.set_hvac_mode
            data:
              hvac_mode: heat
            target: !input thermostat_target
          - service: better_thermostat.set_temp_target_temperature
            data:
              temperature: !input set_bt_temp
            target: !input thermostat_target

        else: # else set thermostate to off
          - service: better_thermostat.set_temp_target_temperature
            data:
              temperature: !input set_bt_temp_after
            target: !input thermostat_target
          - delay:
              hours: 0
              minutes: 0
              seconds: 15
              milliseconds: 0
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            target: !input thermostat_target
          # - service: better_thermostat.restore_saved_target_temperature
          #  data: {}
          #  target: !input thermostat_target

    else:
      - if:
        - condition: numeric_state
          entity_id: !input sensor_control
          below: !input set_bt_temp

        then:
          - service: better_thermostat.set_temp_target_temperature
            data:
              temperature: !input set_bt_temp_after
            target: !input thermostat_target

        else:
          - service: better_thermostat.set_temp_target_temperature
            data:
              temperature: !input set_bt_temp_after
            target: !input thermostat_target
          - delay:
              hours: 0
              minutes: 0
              seconds: 15
              milliseconds: 0
          - service: climate.set_hvac_mode
            data:
              hvac_mode: "off"
            target: !input thermostat_target
          # - service: better_thermostat.restore_saved_target_temperature
          #  data: {}
          #  target: !input thermostat_target
