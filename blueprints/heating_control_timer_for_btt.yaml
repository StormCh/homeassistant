blueprint:
  name: Heating Control Timer for BT Thermostats
  description: >
    # Heating Control Timer for BT Thermostats
    
    **Version 0.8**

    Heating control blueprint for BT Thermostats with Timer.
    Means, switch HVAC_Mode to *heat* and Temperature to *value* when Timer starts and reset to last saved Temperature when Timers expires.
    You have to create an automation and create a Button Card for start/stop Timers via Lovelace.

    Required = *

  domain: automation
  source_url: https://github.com/StormCh/homeassistant/blob/main/blueprints/heating_control_timer_for_btt.yaml
  input:
    timer_helper:
      name: Timer *
      description: Select the helper.
      selector:
        entity:
          domain: timer

    thermostat_target:
      name: Thermostats *
      selector:
        target:
          device:
            integration: better_thermostat
          entity:
            integration: better_thermostat
            domain: climate

    set_bt_temp:
      name: Set Temperature
      description: Set the target temperature
      default: 22
      selector:
        number:
          min: 5
          max: 35
          unit_of_measurement: Â°C

mode: restart
max_exceeded: silent

variables:
  timer_helper: !input timer_helper
  thermostat_target: !input thermostat_target
  set_bt_temp: !input set_bt_temp

trigger:
  - platform: state
    entity_id: !input timer_helper
    to: "active"
  - platform: state
    entity_id: !input timer_helper
    to: "idle"

condition: []

action:
  choose:
    # Timer starts
    - conditions:
        - condition: template
          value_template: >
            {{ trigger.to_state.state == "active" }}
      sequence: 
        - service: climate.set_hvac_mode
          data:
            hvac_mode: heat
          target: !input thermostat_target
        - service: better_thermostat.set_temp_target_temperature
          data:
            temperature: !input set_bt_temp
          target: !input thermostat_target
    # Timer expires
    - conditions: 
        - condition: template
          value_template: >
            {{ trigger.to_state.state == "idle" }}
      sequence:
        - service: better_thermostat.restore_saved_target_temperature
          data: {}
          target: !input thermostat_target
        - service: climate.set_hvac_mode
          data:
            hvac_mode: "off"
          target: !input thermostat_target  
        #- service: better_thermostat.reset_heating_power # this currently throws an error, thats why using service above
        #  data: {}
        #  target: !input thermostat_target